apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: {{.Image}}
    command:
    - /usr/bin/kube-apiserver
    - --admission-control=NamespaceLifecycle,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota
    - --advertise-address={{.AdvertiseAddress}}
    - --allow-privileged=true
    - --anonymous-auth=false
    - --apiserver-count={{.APIServerCount}}
    - --bind-address=0.0.0.0
    - --client-ca-file={{.CAPath}}
    - --etcd-cafile={{.EtcdCAPath}}
    - --etcd-certfile={{.EtcdCertPath}}
    - --etcd-keyfile={{.EtcdKeyPath}}
    - --etcd-servers={{.EtcdEndpoints}}
    - --runtime-config=extensions/v1beta1/networkpolicies=true
    - --secure-port={{.SecurePort}}
    - --service-cluster-ip-range={{.ServiceClusterIPRange}}
    - --service-account-key-file={{.ServiceAccountKeyPath}}
    - --storage-backend=etcd3
    - --tls-cert-file={{.CertPath}}
    - --tls-private-key-file={{.KeyPath}}
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        port: 8080
        path: /healthz
      initialDelaySeconds: 15
      timeoutSeconds: 15
    ports:
    - containerPort: {{.SecurePort}}
      hostPort: {{.SecurePort}}
      name: https
    - containerPort: 8080
      hostPort: 8080
      name: local
    volumeMounts:
    - mountPath: {{.CertificatesFolder}}
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
  volumes:
  - hostPath:
      path: {{.CertificatesFolder}}
    name: ssl-certs-kubernetes
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host
