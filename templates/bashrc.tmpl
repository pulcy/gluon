# Test for an interactive shell.  There is no need to set anything
# past this point for scp and rcp, and it's important to refrain from
# outputting anything in those cases.
if [[ $- != *i* ]] ; then
	# Shell is non-interactive.  Be done now!
	return
fi

# Alter prompt
export PS1="\e[1;30m$(cat /etc/machine-id | cut -c 1-8) \e[0;32m$(cat /etc/environment | grep COREOS_PRIVATE_IPV4 | cut -d "=" -f 2) \e[0;34m\w \e[m$ "

# General
alias jq="docker run --rm -i realguess/jq:latest jq"

# Docker
alias dockercleancontainers="docker ps -a --no-trunc| grep 'Exit' | awk '{print \$1}' | xargs -L 1 -r docker rm"
alias dockerrmcontainers="docker ps -a --no-trunc |awk '{print \$1}' | xargs -L 1 -r docker rm -f"
alias dockercleanimages="docker images -a --no-trunc | grep none | awk '{print \$3}' | xargs -L 1 -r docker rmi"
alias dockercleanvolumes='__VOLUMES=$(docker volume ls -q) && if [ ! -z "${__VOLUMES}" ]; then docker volume rm ${__VOLUMES}; fi'
alias dockerclean="dockercleancontainers && dockercleanimages"

# Rkt 
alias rls='sudo rkt list'
alias rstatus='sudo rkt status '
alias rgc='sudo rkt gc'
alias rgc-all='sudo rkt gc --grace-period=0s'

# Etcd
alias cluster-health="etcdctl cluster-health"
alias els="etcdctl ls --recursive --sort"
alias eget="etcdctl get"

# Fleet
alias fc="fleetctl cat"
alias fj="fleetctl journal"
alias fssh="fleetctl ssh --A"
alias fstart="fleetctl start"
alias fstop="fleetctl stop"
alias fdestroy="fleetctl destroy"
alias fcheck="docker run --rm --net=none -it -v /var/run/fleet.sock:/var/run/fleet.sock pulcy/tranquility:latest check"
alias ffix="docker run --rm --net=none -it -v /var/run/fleet.sock:/var/run/fleet.sock pulcy/tranquility:latest fix"
alias fcleanup-etcd="docker run -it --rm --net=host pulcy/fleet-cleanup:latest"
alias flm="fleetctl list-machines"
alias flu="fleetctl list-units"
alias fluf="fleetctl list-unit-files"
alias flu-active="fleetctl list-units | grep -v inactive"
alias flu-inactive="fleetctl list-units | grep inactive"
alias flu-failed="fleetctl list-units | grep failed"
alias flu-running="fleetctl list-units | grep running"
alias wflm="watch fleetctl list-machines"
alias wflu="watch fleetctl list-units"
alias wflu-active="watch 'fleetctl list-units | grep -v inactive'"
alias wflu-inactive="watch 'fleetctl list-units | grep inactive'"
alias wflu-failed="watch 'fleetctl list-units | grep failed'"
alias wflu-running="watch 'fleetctl list-units | grep running'"

function frestart() {
	fleetctl stop $@
	fleetctl ssh $1 sudo systemctl reset-failed $1
	fleetctl start $@
}
function frestart-failed() {
	local failedUnits=$(fleetctl list-units --no-legend | grep failed | awk '{print $1}' | uniq)
	for unit in ${failedUnits}; do
		frestart ${unit}
	done
}
function xcluster() {
	local IPs=$(fleetctl list-machines --fields=ip --no-legend)
	for ip in ${IPs}; do
		ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -A -q core@${ip} $@
	done
}

# Systemd
alias reset-failed="sudo systemctl reset-failed"
alias sc="sudo systemctl cat"
alias srestart="sudo systemctl restart"
alias sstatus="sudo systemctl status"
alias sstart="sudo systemctl start"
alias sstop="sudo systemctl stop"
alias sdestroy="sudo systemctl destroy"
alias slj="sudo systemctl list-jobs -a | cat"
alias slm="sudo systemctl list-machines | cat"
alias sls="sudo systemctl list-sockets -a | cat"
alias slt="sudo systemctl list-timers -a | cat"
alias slu="sudo systemctl list-units -a | cat"
alias sluf="sudo systemctl list-unit-files -a | cat"
alias slu-active="sudo systemctl list-units -a | grep -v inactive"
alias slu-inactive="sudo systemctl list-units -a | grep inactive"
alias slu-failed="sudo systemctl list-units -a | grep failed"
alias slu-running="sudo systemctl list-units -a | grep running"
alias wslj="watch 'sudo systemctl list-jobs -a | cat'"
alias wslm="watch 'sudo systemctl list-machines | cat'"
alias wsls="watch 'sudo systemctl list-sockets -a | cat'"
alias wslt="watch 'sudo systemctl list-timers -a | cat'"
alias wslu="watch 'sudo systemctl list-units -a | cat'"
alias wsluf="watch 'sudo systemctl list-unit-files -a | cat'"
alias wslu-active="watch 'sudo systemctl list-units -a | grep -v inactive'"
alias wslu-inactive="watch 'sudo systemctl list-units -a | grep inactive'"
alias wslu-failed="watch 'sudo systemctl list-units -a | grep failed'"
alias wslu-running="watch 'sudo systemctl list-units -a | grep running'"

# Journalctl
alias jc="journalctl"
alias jcu="journalctl --unit"
alias jcuf="journalctl -f --unit"
alias jrotate="sudo pkill -USR2 systemd-journald"
alias jverify="journalctl --verify"

# Gluon

function update-gluon() {
	local image=${1}
	if [ -z ${image} ]; then
		echo Pass image argument
	else
		docker pull ${image}
		docker run --rm -v /home/core/bin/:/destination/ ${image}
		/home/core/bin/gluon update "$@"
	fi
}

function update-gluon-old() {
	local image=${1}
	if [ -z ${image} ]; then
		echo Pass image argument
	else
		docker pull ${image}
		docker run --rm -v /home/core/bin/:/destination/ ${image}
		echo ${image} | sudo tee /etc/pulcy/gluon-image
		sudo systemctl restart gluon
		sudo systemctl stop fleet
		sudo systemctl stop etcd2 || true
		sudo systemctl stop consul 
		sudo mount -o remount /usr/bin 
		sudo systemctl start etcd2 || true
		sudo systemctl start consul 
		sudo systemctl start fleet
	fi
}
